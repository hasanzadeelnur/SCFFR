@model TCYDMWebApp.ViewModels.UserLoginViewModel

@{
    TempData["Title"] = "UserLogin";

}
@using Microsoft.AspNetCore.Mvc.Localization
@using TCYDMWebApp.Repositories.Lang


@inject IHtmlLocalizer<SharedResource> SharedLocalizer
<div class="sign-up" style="        background-color: #dc1018;">
    <div class="row">
        <div class="col-lg-12 col-md-12 d-flex justify-content-center">
            <img src="~/mainlayout/logo/user-line.svg" alt="">
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <div class="first-a-tag mr-5">
                <a href="" id="btn-login" style="text-transform:capitalize">@SharedLocalizer["Sign in"]</a>
                <!-- <hr class="first-line"> -->

            </div>
            <div class="second-a-tag ml-5">
                <a href="" id="btn-register" style="text-transform:capitalize">@SharedLocalizer["Registration"]</a>
                <!-- <hr class="second-line"> -->
                @if (TempData["ServerResponseError"] != null)
                {
                    <div class="p-red-box servererror" style="position:absolute;left:5%;top:40%;z-index:2;display:none;">
                        <p style="color:white">@TempData["ServerResponseError"]</p>

                    </div>
                }
            </div>
        </div>
        <div class="col-lg-4"></div>
    </div>
    @if (TempData["SuccessResponse"] is object)
    {
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">@SharedLocalizer["Confirmation needed"]</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @TempData["SuccessResponse"]
                    </div>
                    <div class="modal-footer">
                       
                        <button type="button" class="btn btn-primary" data-dismiss="modal" >@SharedLocalizer["Understood"]</button>
                    </div>
                </div>
            </div>
        </div>
    }



    <div class="container">
        <!-- REGISTER FORM -->

        <div class="row d-none" id="register-form">
            <div class="col-lg-4">
            </div>
            <div class="col-lg-8">
                <div class="row">
                    <div class="col-lg-6">
                        @await Component.InvokeAsync("Registration")
                    </div>
                </div>
            </div>
            <div class="col-lg-2">
            </div>
        </div>
        <!-- REGISTER FORM -->
        <!-- LOGIN FORM -->
        <form asp-action="UserLoginData" method="post">
            <div class="row mt-2" id="login-form">
                <div class="col-lg-4">

                </div>
                <div class="col-lg-4">
                    <div class="col-lg-12 col-md-12">
                        <input type="text" style="width: 100% !important;" asp-for="Identification" id="email">
                        <span asp-validation-for="Identification" class="text-info"></span>
                    </div>
                    <div class="col-lg-12 col-md-12">

                        <input id="password-field" style="width: 100% !important;" class="form-control" type="password" asp-for="Password">
                        <span class="fa fa-fw fa-eye field-icon toggle-password"></span>
                        <span asp-validation-for="Password" class="text-info"></span>
                    </div>

                    <div class="col-lg-12 col-md-12">
                        <button type="submit" class="button-sign" style="text-transform:capitalize">@SharedLocalizer["Login"]</button>
                    </div>
                    <div class="col-lg-12 col-md-12">
                        <div class="row">
                            <div class="col-5">
                                <label class="form-check-label">
                                    <input asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                                </label>
                            </div>
                            <div class="col-7 text-right">
                                <a class="forget" asp-action="ForgotPassword" style="text-transform:capitalize">@SharedLocalizer["Forgot Password"] ?</a>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">

                </div>
            </div>
        </form>
    </div>
    <!-- LOGIN FORM -->
</div>


</div>

@section Scripts {
    @if (TempData["ServerResponseError"] != null)
    {
        <script>
            $(".servererror").fadeIn(function () {
                setTimeout(function () {
                    $(".servererror").fadeOut();
                }, 2000);
            })
        </script>
   
    }
    @if (TempData["SuccessResponse"] is object)
    {
        <script>
            $("#exampleModalCenter").modal("show");
        </script>
    }
    <script>
        $(document).ready(function () {
            const togglePassword = document.querySelector('.toggle-password');
            const password = document.querySelector('#password-field');
            togglePassword.addEventListener('click', function (e) {
                // toggle the type attribute
                const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
                password.setAttribute('type', type);
                // toggle the eye slash icon
                this.classList.toggle('fa-eye-slash');
            });

            $("#selectcountry").change(function () {
                if ($(this).data('options') === undefined) {
                    /*Taking an array of all options-2 and kind of embedding it on the select1*/
                    $(this).data('options', $('#selectregion option').clone());
                }
                var id = $(this).val();
                var options = $(this).data('options').filter('[value=' + id + ']');
                $('#selectregion').html(options);
            });

        })
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
